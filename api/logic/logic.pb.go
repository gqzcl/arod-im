// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: logic/logic.proto

package logic

import (
	protocol "github.com/gqzcl/gim/api/protocol"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PushMsg_Type int32

const (
	PushMsg_PUSH      PushMsg_Type = 0
	PushMsg_ROOM      PushMsg_Type = 1
	PushMsg_BROADCAST PushMsg_Type = 2
)

// Enum value maps for PushMsg_Type.
var (
	PushMsg_Type_name = map[int32]string{
		0: "PUSH",
		1: "ROOM",
		2: "BROADCAST",
	}
	PushMsg_Type_value = map[string]int32{
		"PUSH":      0,
		"ROOM":      1,
		"BROADCAST": 2,
	}
)

func (x PushMsg_Type) Enum() *PushMsg_Type {
	p := new(PushMsg_Type)
	*p = x
	return p
}

func (x PushMsg_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PushMsg_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_logic_logic_proto_enumTypes[0].Descriptor()
}

func (PushMsg_Type) Type() protoreflect.EnumType {
	return &file_logic_logic_proto_enumTypes[0]
}

func (x PushMsg_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PushMsg_Type.Descriptor instead.
func (PushMsg_Type) EnumDescriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{0, 0}
}

type PushMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      PushMsg_Type `protobuf:"varint,1,opt,name=type,proto3,enum=gim.logic.PushMsg_Type" json:"type,omitempty"`
	Operation int32        `protobuf:"varint,2,opt,name=operation,proto3" json:"operation,omitempty"`
	Speed     int32        `protobuf:"varint,3,opt,name=speed,proto3" json:"speed,omitempty"`
	Server    string       `protobuf:"bytes,4,opt,name=server,proto3" json:"server,omitempty"`
	Room      string       `protobuf:"bytes,5,opt,name=room,proto3" json:"room,omitempty"`
	Keys      []string     `protobuf:"bytes,6,rep,name=keys,proto3" json:"keys,omitempty"`
	Msg       []byte       `protobuf:"bytes,7,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *PushMsg) Reset() {
	*x = PushMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushMsg) ProtoMessage() {}

func (x *PushMsg) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushMsg.ProtoReflect.Descriptor instead.
func (*PushMsg) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{0}
}

func (x *PushMsg) GetType() PushMsg_Type {
	if x != nil {
		return x.Type
	}
	return PushMsg_PUSH
}

func (x *PushMsg) GetOperation() int32 {
	if x != nil {
		return x.Operation
	}
	return 0
}

func (x *PushMsg) GetSpeed() int32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *PushMsg) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *PushMsg) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

func (x *PushMsg) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *PushMsg) GetMsg() []byte {
	if x != nil {
		return x.Msg
	}
	return nil
}

type ConnectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server string `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Cookie string `protobuf:"bytes,2,opt,name=cookie,proto3" json:"cookie,omitempty"`
	Token  []byte `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ConnectReq) Reset() {
	*x = ConnectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectReq) ProtoMessage() {}

func (x *ConnectReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectReq.ProtoReflect.Descriptor instead.
func (*ConnectReq) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectReq) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *ConnectReq) GetCookie() string {
	if x != nil {
		return x.Cookie
	}
	return ""
}

func (x *ConnectReq) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type ConnectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid       int64   `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Key       string  `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	RoomID    string  `protobuf:"bytes,3,opt,name=roomID,proto3" json:"roomID,omitempty"`
	Accepts   []int32 `protobuf:"varint,4,rep,packed,name=accepts,proto3" json:"accepts,omitempty"`
	Heartbeat int64   `protobuf:"varint,5,opt,name=Heartbeat,proto3" json:"Heartbeat,omitempty"`
}

func (x *ConnectReply) Reset() {
	*x = ConnectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectReply) ProtoMessage() {}

func (x *ConnectReply) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectReply.ProtoReflect.Descriptor instead.
func (*ConnectReply) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{2}
}

func (x *ConnectReply) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *ConnectReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ConnectReply) GetRoomID() string {
	if x != nil {
		return x.RoomID
	}
	return ""
}

func (x *ConnectReply) GetAccepts() []int32 {
	if x != nil {
		return x.Accepts
	}
	return nil
}

func (x *ConnectReply) GetHeartbeat() int64 {
	if x != nil {
		return x.Heartbeat
	}
	return 0
}

type DisConnectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid    int64  `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Server string `protobuf:"bytes,3,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *DisConnectReq) Reset() {
	*x = DisConnectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisConnectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisConnectReq) ProtoMessage() {}

func (x *DisConnectReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisConnectReq.ProtoReflect.Descriptor instead.
func (*DisConnectReq) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{3}
}

func (x *DisConnectReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *DisConnectReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DisConnectReq) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

type DisConnectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Has bool `protobuf:"varint,1,opt,name=has,proto3" json:"has,omitempty"`
}

func (x *DisConnectReply) Reset() {
	*x = DisConnectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisConnectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisConnectReply) ProtoMessage() {}

func (x *DisConnectReply) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisConnectReply.ProtoReflect.Descriptor instead.
func (*DisConnectReply) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{4}
}

func (x *DisConnectReply) GetHas() bool {
	if x != nil {
		return x.Has
	}
	return false
}

type HeartbeatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid    int64  `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Server string `protobuf:"bytes,3,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *HeartbeatReq) Reset() {
	*x = HeartbeatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatReq) ProtoMessage() {}

func (x *HeartbeatReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatReq.ProtoReflect.Descriptor instead.
func (*HeartbeatReq) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{5}
}

func (x *HeartbeatReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *HeartbeatReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *HeartbeatReq) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

type HeartbeatReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HeartbeatReply) Reset() {
	*x = HeartbeatReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartbeatReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatReply) ProtoMessage() {}

func (x *HeartbeatReply) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatReply.ProtoReflect.Descriptor instead.
func (*HeartbeatReply) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{6}
}

type OnlineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server    string           `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	RoomCount map[string]int32 `protobuf:"bytes,2,rep,name=roomCount,proto3" json:"roomCount,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *OnlineReq) Reset() {
	*x = OnlineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineReq) ProtoMessage() {}

func (x *OnlineReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineReq.ProtoReflect.Descriptor instead.
func (*OnlineReq) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{7}
}

func (x *OnlineReq) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *OnlineReq) GetRoomCount() map[string]int32 {
	if x != nil {
		return x.RoomCount
	}
	return nil
}

type OnlineReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllRoomCount map[string]int32 `protobuf:"bytes,1,rep,name=allRoomCount,proto3" json:"allRoomCount,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *OnlineReply) Reset() {
	*x = OnlineReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineReply) ProtoMessage() {}

func (x *OnlineReply) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineReply.ProtoReflect.Descriptor instead.
func (*OnlineReply) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{8}
}

func (x *OnlineReply) GetAllRoomCount() map[string]int32 {
	if x != nil {
		return x.AllRoomCount
	}
	return nil
}

type ReceiveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mid   int64           `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	Proto *protocol.Proto `protobuf:"bytes,2,opt,name=proto,proto3" json:"proto,omitempty"`
}

func (x *ReceiveReq) Reset() {
	*x = ReceiveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveReq) ProtoMessage() {}

func (x *ReceiveReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveReq.ProtoReflect.Descriptor instead.
func (*ReceiveReq) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{9}
}

func (x *ReceiveReq) GetMid() int64 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *ReceiveReq) GetProto() *protocol.Proto {
	if x != nil {
		return x.Proto
	}
	return nil
}

type ReceiveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReceiveReply) Reset() {
	*x = ReceiveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveReply) ProtoMessage() {}

func (x *ReceiveReply) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveReply.ProtoReflect.Descriptor instead.
func (*ReceiveReply) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{10}
}

type NodesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Platform string `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	ClientIP string `protobuf:"bytes,2,opt,name=clientIP,proto3" json:"clientIP,omitempty"`
}

func (x *NodesReq) Reset() {
	*x = NodesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodesReq) ProtoMessage() {}

func (x *NodesReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodesReq.ProtoReflect.Descriptor instead.
func (*NodesReq) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{11}
}

func (x *NodesReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *NodesReq) GetClientIP() string {
	if x != nil {
		return x.ClientIP
	}
	return ""
}

type NodesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain       string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	TcpPort      int32    `protobuf:"varint,2,opt,name=tcp_port,json=tcpPort,proto3" json:"tcp_port,omitempty"`
	WsPort       int32    `protobuf:"varint,3,opt,name=ws_port,json=wsPort,proto3" json:"ws_port,omitempty"`
	WssPort      int32    `protobuf:"varint,4,opt,name=wss_port,json=wssPort,proto3" json:"wss_port,omitempty"`
	Heartbeat    int32    `protobuf:"varint,5,opt,name=heartbeat,proto3" json:"heartbeat,omitempty"`
	Nodes        []string `protobuf:"bytes,6,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Backoff      *Backoff `protobuf:"bytes,7,opt,name=backoff,proto3" json:"backoff,omitempty"`
	HeartbeatMax int32    `protobuf:"varint,8,opt,name=heartbeat_max,json=heartbeatMax,proto3" json:"heartbeat_max,omitempty"`
}

func (x *NodesReply) Reset() {
	*x = NodesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodesReply) ProtoMessage() {}

func (x *NodesReply) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodesReply.ProtoReflect.Descriptor instead.
func (*NodesReply) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{12}
}

func (x *NodesReply) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *NodesReply) GetTcpPort() int32 {
	if x != nil {
		return x.TcpPort
	}
	return 0
}

func (x *NodesReply) GetWsPort() int32 {
	if x != nil {
		return x.WsPort
	}
	return 0
}

func (x *NodesReply) GetWssPort() int32 {
	if x != nil {
		return x.WssPort
	}
	return 0
}

func (x *NodesReply) GetHeartbeat() int32 {
	if x != nil {
		return x.Heartbeat
	}
	return 0
}

func (x *NodesReply) GetNodes() []string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *NodesReply) GetBackoff() *Backoff {
	if x != nil {
		return x.Backoff
	}
	return nil
}

func (x *NodesReply) GetHeartbeatMax() int32 {
	if x != nil {
		return x.HeartbeatMax
	}
	return 0
}

type Backoff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxDelay  int32   `protobuf:"varint,1,opt,name=max_delay,json=maxDelay,proto3" json:"max_delay,omitempty"`
	BaseDelay int32   `protobuf:"varint,2,opt,name=base_delay,json=baseDelay,proto3" json:"base_delay,omitempty"`
	Factor    float32 `protobuf:"fixed32,3,opt,name=factor,proto3" json:"factor,omitempty"`
	Jitter    float32 `protobuf:"fixed32,4,opt,name=jitter,proto3" json:"jitter,omitempty"`
}

func (x *Backoff) Reset() {
	*x = Backoff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_logic_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Backoff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Backoff) ProtoMessage() {}

func (x *Backoff) ProtoReflect() protoreflect.Message {
	mi := &file_logic_logic_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Backoff.ProtoReflect.Descriptor instead.
func (*Backoff) Descriptor() ([]byte, []int) {
	return file_logic_logic_proto_rawDescGZIP(), []int{13}
}

func (x *Backoff) GetMaxDelay() int32 {
	if x != nil {
		return x.MaxDelay
	}
	return 0
}

func (x *Backoff) GetBaseDelay() int32 {
	if x != nil {
		return x.BaseDelay
	}
	return 0
}

func (x *Backoff) GetFactor() float32 {
	if x != nil {
		return x.Factor
	}
	return 0
}

func (x *Backoff) GetJitter() float32 {
	if x != nil {
		return x.Jitter
	}
	return 0
}

var File_logic_logic_proto protoreflect.FileDescriptor

var file_logic_logic_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x09, 0x67, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x1a, 0x17,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe7, 0x01, 0x0a, 0x07, 0x50, 0x75, 0x73, 0x68,
	0x4d, 0x73, 0x67, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x67, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x50, 0x75,
	0x73, 0x68, 0x4d, 0x73, 0x67, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73,
	0x70, 0x65, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x6b, 0x65, 0x79, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x29, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08,
	0x0a, 0x04, 0x50, 0x55, 0x53, 0x48, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x4f, 0x4f, 0x4d,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x10,
	0x02, 0x22, 0x52, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x82, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x07, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x22, 0x4b, 0x0a, 0x0d, 0x44, 0x69,
	0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x23, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x61,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x68, 0x61, 0x73, 0x22, 0x4a, 0x0a, 0x0c,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x10, 0x0a, 0x0e, 0x48, 0x65, 0x61, 0x72,
	0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xa4, 0x01, 0x0a, 0x09, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x41, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0x3c, 0x0a, 0x0e, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x9c, 0x01, 0x0a, 0x0b, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x4c, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x69, 0x6d, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a,
	0x3f, 0x0a, 0x11, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x49, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x69, 0x64,
	0x12, 0x29, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x67, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0e, 0x0a, 0x0c, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x42, 0x0a, 0x08, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x50, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x50, 0x22,
	0xfa, 0x01, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x63, 0x70, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x63, 0x70, 0x50, 0x6f, 0x72,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x77, 0x73, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x77, 0x73, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x73,
	0x73, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x77, 0x73,
	0x73, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x65, 0x61, 0x72, 0x74, 0x62,
	0x65, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x62, 0x61, 0x63,
	0x6b, 0x6f, 0x66, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x69, 0x6d,
	0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x52, 0x07,
	0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x68, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x4d, 0x61, 0x78, 0x22, 0x75, 0x0a, 0x07,
	0x42, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x64,
	0x65, 0x6c, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x44,
	0x65, 0x6c, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x65, 0x6c,
	0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x44, 0x65,
	0x6c, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6a,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x6a, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x32, 0xf4, 0x02, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x12, 0x39, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x15, 0x2e, 0x67, 0x69, 0x6d, 0x2e, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x17, 0x2e, 0x67, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x42, 0x0a, 0x0a, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x18, 0x2e, 0x67, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x2e, 0x44, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x67, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x44, 0x69, 0x73,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3f, 0x0a, 0x09,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x12, 0x17, 0x2e, 0x67, 0x69, 0x6d, 0x2e,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x19, 0x2e, 0x67, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x48,
	0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3b, 0x0a,
	0x0b, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x14, 0x2e, 0x67,
	0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x07, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x15, 0x2e, 0x67, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x67,
	0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x13,
	0x2e, 0x67, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x67, 0x69, 0x6d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x71, 0x7a, 0x63, 0x6c, 0x2f, 0x67,
	0x69, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x3b, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_logic_logic_proto_rawDescOnce sync.Once
	file_logic_logic_proto_rawDescData = file_logic_logic_proto_rawDesc
)

func file_logic_logic_proto_rawDescGZIP() []byte {
	file_logic_logic_proto_rawDescOnce.Do(func() {
		file_logic_logic_proto_rawDescData = protoimpl.X.CompressGZIP(file_logic_logic_proto_rawDescData)
	})
	return file_logic_logic_proto_rawDescData
}

var file_logic_logic_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_logic_logic_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_logic_logic_proto_goTypes = []interface{}{
	(PushMsg_Type)(0),       // 0: gim.logic.PushMsg.Type
	(*PushMsg)(nil),         // 1: gim.logic.PushMsg
	(*ConnectReq)(nil),      // 2: gim.logic.ConnectReq
	(*ConnectReply)(nil),    // 3: gim.logic.ConnectReply
	(*DisConnectReq)(nil),   // 4: gim.logic.DisConnectReq
	(*DisConnectReply)(nil), // 5: gim.logic.DisConnectReply
	(*HeartbeatReq)(nil),    // 6: gim.logic.HeartbeatReq
	(*HeartbeatReply)(nil),  // 7: gim.logic.HeartbeatReply
	(*OnlineReq)(nil),       // 8: gim.logic.OnlineReq
	(*OnlineReply)(nil),     // 9: gim.logic.OnlineReply
	(*ReceiveReq)(nil),      // 10: gim.logic.ReceiveReq
	(*ReceiveReply)(nil),    // 11: gim.logic.ReceiveReply
	(*NodesReq)(nil),        // 12: gim.logic.NodesReq
	(*NodesReply)(nil),      // 13: gim.logic.NodesReply
	(*Backoff)(nil),         // 14: gim.logic.Backoff
	nil,                     // 15: gim.logic.OnlineReq.RoomCountEntry
	nil,                     // 16: gim.logic.OnlineReply.AllRoomCountEntry
	(*protocol.Proto)(nil),  // 17: gim.protocol.Proto
}
var file_logic_logic_proto_depIdxs = []int32{
	0,  // 0: gim.logic.PushMsg.type:type_name -> gim.logic.PushMsg.Type
	15, // 1: gim.logic.OnlineReq.roomCount:type_name -> gim.logic.OnlineReq.RoomCountEntry
	16, // 2: gim.logic.OnlineReply.allRoomCount:type_name -> gim.logic.OnlineReply.AllRoomCountEntry
	17, // 3: gim.logic.ReceiveReq.proto:type_name -> gim.protocol.Proto
	14, // 4: gim.logic.NodesReply.backoff:type_name -> gim.logic.Backoff
	2,  // 5: gim.logic.Logic.Connect:input_type -> gim.logic.ConnectReq
	4,  // 6: gim.logic.Logic.Disconnect:input_type -> gim.logic.DisConnectReq
	6,  // 7: gim.logic.Logic.Heartbeat:input_type -> gim.logic.HeartbeatReq
	8,  // 8: gim.logic.Logic.RenewOnline:input_type -> gim.logic.OnlineReq
	10, // 9: gim.logic.Logic.Receive:input_type -> gim.logic.ReceiveReq
	12, // 10: gim.logic.Logic.Nodes:input_type -> gim.logic.NodesReq
	3,  // 11: gim.logic.Logic.Connect:output_type -> gim.logic.ConnectReply
	5,  // 12: gim.logic.Logic.Disconnect:output_type -> gim.logic.DisConnectReply
	7,  // 13: gim.logic.Logic.Heartbeat:output_type -> gim.logic.HeartbeatReply
	9,  // 14: gim.logic.Logic.RenewOnline:output_type -> gim.logic.OnlineReply
	11, // 15: gim.logic.Logic.Receive:output_type -> gim.logic.ReceiveReply
	13, // 16: gim.logic.Logic.Nodes:output_type -> gim.logic.NodesReply
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_logic_logic_proto_init() }
func file_logic_logic_proto_init() {
	if File_logic_logic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_logic_logic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisConnectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisConnectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartbeatReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_logic_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Backoff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_logic_logic_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_logic_logic_proto_goTypes,
		DependencyIndexes: file_logic_logic_proto_depIdxs,
		EnumInfos:         file_logic_logic_proto_enumTypes,
		MessageInfos:      file_logic_logic_proto_msgTypes,
	}.Build()
	File_logic_logic_proto = out.File
	file_logic_logic_proto_rawDesc = nil
	file_logic_logic_proto_goTypes = nil
	file_logic_logic_proto_depIdxs = nil
}
