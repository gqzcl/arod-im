// Copyright 2022 gqzcl <gqzcl@qq.com>. All rights reserved.
// Use of this source code is governed by a MIT style

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: logic/v1/logic.proto

package v1

import (
	v1 "arod-im/api/job/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgType int32

const (
	MsgType_text  MsgType = 0 // 文本消息
	MsgType_image MsgType = 1 // 图片消息
	MsgType_face  MsgType = 2 // 表情消息
	MsgType_video MsgType = 3 // 视频消息
	MsgType_file  MsgType = 4 // 文件消息
	MsgType_sound MsgType = 5 // 音频消息
)

// Enum value maps for MsgType.
var (
	MsgType_name = map[int32]string{
		0: "text",
		1: "image",
		2: "face",
		3: "video",
		4: "file",
		5: "sound",
	}
	MsgType_value = map[string]int32{
		"text":  0,
		"image": 1,
		"face":  2,
		"video": 3,
		"file":  4,
		"sound": 5,
	}
)

func (x MsgType) Enum() *MsgType {
	p := new(MsgType)
	*p = x
	return p
}

func (x MsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_logic_v1_logic_proto_enumTypes[0].Descriptor()
}

func (MsgType) Type() protoreflect.EnumType {
	return &file_logic_v1_logic_proto_enumTypes[0]
}

func (x MsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgType.Descriptor instead.
func (MsgType) EnumDescriptor() ([]byte, []int) {
	return file_logic_v1_logic_proto_rawDescGZIP(), []int{0}
}

// 消息返回响应
type SendReplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionStatus string `protobuf:"bytes,1,opt,name=action_status,json=actionStatus,proto3" json:"action_status,omitempty"` // 请求结果
	ErrorInfo    string `protobuf:"bytes,2,opt,name=error_info,json=errorInfo,proto3" json:"error_info,omitempty"`          // 错误信息
	ErrorCode    uint32 `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`         // 错误码
	MsgTime      int64  `protobuf:"varint,4,opt,name=msg_time,json=msgTime,proto3" json:"msg_time,omitempty"`               // 消息时间戳
	MsgSeq       string `protobuf:"bytes,5,opt,name=msg_seq,json=msgSeq,proto3" json:"msg_seq,omitempty"`                   // 消息序列号
}

func (x *SendReplay) Reset() {
	*x = SendReplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_v1_logic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendReplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendReplay) ProtoMessage() {}

func (x *SendReplay) ProtoReflect() protoreflect.Message {
	mi := &file_logic_v1_logic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendReplay.ProtoReflect.Descriptor instead.
func (*SendReplay) Descriptor() ([]byte, []int) {
	return file_logic_v1_logic_proto_rawDescGZIP(), []int{0}
}

func (x *SendReplay) GetActionStatus() string {
	if x != nil {
		return x.ActionStatus
	}
	return ""
}

func (x *SendReplay) GetErrorInfo() string {
	if x != nil {
		return x.ErrorInfo
	}
	return ""
}

func (x *SendReplay) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *SendReplay) GetMsgTime() int64 {
	if x != nil {
		return x.MsgTime
	}
	return 0
}

func (x *SendReplay) GetMsgSeq() string {
	if x != nil {
		return x.MsgSeq
	}
	return ""
}

// 撤回消息返回响应
type RecallReplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionStatus string `protobuf:"bytes,1,opt,name=action_status,json=actionStatus,proto3" json:"action_status,omitempty"` // 请求结果
	ErrorInfo    string `protobuf:"bytes,2,opt,name=error_info,json=errorInfo,proto3" json:"error_info,omitempty"`          // 错误信息
	ErrorCode    uint32 `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`         // 错误码
}

func (x *RecallReplay) Reset() {
	*x = RecallReplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_v1_logic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecallReplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecallReplay) ProtoMessage() {}

func (x *RecallReplay) ProtoReflect() protoreflect.Message {
	mi := &file_logic_v1_logic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecallReplay.ProtoReflect.Descriptor instead.
func (*RecallReplay) Descriptor() ([]byte, []int) {
	return file_logic_v1_logic_proto_rawDescGZIP(), []int{1}
}

func (x *RecallReplay) GetActionStatus() string {
	if x != nil {
		return x.ActionStatus
	}
	return ""
}

func (x *RecallReplay) GetErrorInfo() string {
	if x != nil {
		return x.ErrorInfo
	}
	return ""
}

func (x *RecallReplay) GetErrorCode() uint32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// 单聊发送消息请求
type SingleSendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     string        `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Cid     string        `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`
	MsgBody []*v1.MsgBody `protobuf:"bytes,3,rep,name=msg_body,json=msgBody,proto3" json:"msg_body,omitempty"`
}

func (x *SingleSendRequest) Reset() {
	*x = SingleSendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_v1_logic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleSendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleSendRequest) ProtoMessage() {}

func (x *SingleSendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logic_v1_logic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleSendRequest.ProtoReflect.Descriptor instead.
func (*SingleSendRequest) Descriptor() ([]byte, []int) {
	return file_logic_v1_logic_proto_rawDescGZIP(), []int{2}
}

func (x *SingleSendRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *SingleSendRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *SingleSendRequest) GetMsgBody() []*v1.MsgBody {
	if x != nil {
		return x.MsgBody
	}
	return nil
}

// 单聊撤回消息请求
type SingleRecallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Cid    string `protobuf:"bytes,2,opt,name=cid,proto3" json:"cid,omitempty"`
	MsgKey string `protobuf:"bytes,3,opt,name=msg_key,json=msgKey,proto3" json:"msg_key,omitempty"`
}

func (x *SingleRecallRequest) Reset() {
	*x = SingleRecallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_v1_logic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleRecallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleRecallRequest) ProtoMessage() {}

func (x *SingleRecallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logic_v1_logic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleRecallRequest.ProtoReflect.Descriptor instead.
func (*SingleRecallRequest) Descriptor() ([]byte, []int) {
	return file_logic_v1_logic_proto_rawDescGZIP(), []int{3}
}

func (x *SingleRecallRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *SingleRecallRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *SingleRecallRequest) GetMsgKey() string {
	if x != nil {
		return x.MsgKey
	}
	return ""
}

// 群聊发送消息请求
type GroupSendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     string        `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	GroupId string        `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	MsgBody []*v1.MsgBody `protobuf:"bytes,3,rep,name=msg_body,json=msgBody,proto3" json:"msg_body,omitempty"`
}

func (x *GroupSendRequest) Reset() {
	*x = GroupSendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_v1_logic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSendRequest) ProtoMessage() {}

func (x *GroupSendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logic_v1_logic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSendRequest.ProtoReflect.Descriptor instead.
func (*GroupSendRequest) Descriptor() ([]byte, []int) {
	return file_logic_v1_logic_proto_rawDescGZIP(), []int{4}
}

func (x *GroupSendRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GroupSendRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupSendRequest) GetMsgBody() []*v1.MsgBody {
	if x != nil {
		return x.MsgBody
	}
	return nil
}

// 群聊@消息请求
type GroupSendMentionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid         string                                 `protobuf:"bytes,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	GroupId     string                                 `protobuf:"bytes,2,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	MsgBody     []*v1.MsgBody                          `protobuf:"bytes,3,rep,name=msg_body,json=msgBody,proto3" json:"msg_body,omitempty"`
	GroupAtInfo []*GroupSendMentionRequest_GroupAtInfo `protobuf:"bytes,4,rep,name=group_at_info,json=groupAtInfo,proto3" json:"group_at_info,omitempty"`
}

func (x *GroupSendMentionRequest) Reset() {
	*x = GroupSendMentionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_v1_logic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSendMentionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSendMentionRequest) ProtoMessage() {}

func (x *GroupSendMentionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logic_v1_logic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSendMentionRequest.ProtoReflect.Descriptor instead.
func (*GroupSendMentionRequest) Descriptor() ([]byte, []int) {
	return file_logic_v1_logic_proto_rawDescGZIP(), []int{5}
}

func (x *GroupSendMentionRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GroupSendMentionRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupSendMentionRequest) GetMsgBody() []*v1.MsgBody {
	if x != nil {
		return x.MsgBody
	}
	return nil
}

func (x *GroupSendMentionRequest) GetGroupAtInfo() []*GroupSendMentionRequest_GroupAtInfo {
	if x != nil {
		return x.GroupAtInfo
	}
	return nil
}

// 群聊撤回消息请求
type GroupRecallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	MsgSeq  string `protobuf:"bytes,2,opt,name=msg_seq,json=msgSeq,proto3" json:"msg_seq,omitempty"`
}

func (x *GroupRecallRequest) Reset() {
	*x = GroupRecallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_v1_logic_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupRecallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupRecallRequest) ProtoMessage() {}

func (x *GroupRecallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_logic_v1_logic_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupRecallRequest.ProtoReflect.Descriptor instead.
func (*GroupRecallRequest) Descriptor() ([]byte, []int) {
	return file_logic_v1_logic_proto_rawDescGZIP(), []int{6}
}

func (x *GroupRecallRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupRecallRequest) GetMsgSeq() string {
	if x != nil {
		return x.MsgSeq
	}
	return ""
}

// 连接请求
type ConnectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server string `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Uid    string `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	// format: ip:port
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Token   []byte `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ConnectReq) Reset() {
	*x = ConnectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_v1_logic_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectReq) ProtoMessage() {}

func (x *ConnectReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_v1_logic_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectReq.ProtoReflect.Descriptor instead.
func (*ConnectReq) Descriptor() ([]byte, []int) {
	return file_logic_v1_logic_proto_rawDescGZIP(), []int{7}
}

func (x *ConnectReq) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

func (x *ConnectReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *ConnectReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ConnectReq) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type ConnectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ConnectReply) Reset() {
	*x = ConnectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_v1_logic_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectReply) ProtoMessage() {}

func (x *ConnectReply) ProtoReflect() protoreflect.Message {
	mi := &file_logic_v1_logic_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectReply.ProtoReflect.Descriptor instead.
func (*ConnectReply) Descriptor() ([]byte, []int) {
	return file_logic_v1_logic_proto_rawDescGZIP(), []int{8}
}

func (x *ConnectReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DisConnectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	// format: ip:port
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Server  string `protobuf:"bytes,3,opt,name=server,proto3" json:"server,omitempty"`
}

func (x *DisConnectReq) Reset() {
	*x = DisConnectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_v1_logic_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisConnectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisConnectReq) ProtoMessage() {}

func (x *DisConnectReq) ProtoReflect() protoreflect.Message {
	mi := &file_logic_v1_logic_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisConnectReq.ProtoReflect.Descriptor instead.
func (*DisConnectReq) Descriptor() ([]byte, []int) {
	return file_logic_v1_logic_proto_rawDescGZIP(), []int{9}
}

func (x *DisConnectReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *DisConnectReq) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DisConnectReq) GetServer() string {
	if x != nil {
		return x.Server
	}
	return ""
}

type DisConnectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DisConnectReply) Reset() {
	*x = DisConnectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_v1_logic_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisConnectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisConnectReply) ProtoMessage() {}

func (x *DisConnectReply) ProtoReflect() protoreflect.Message {
	mi := &file_logic_v1_logic_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisConnectReply.ProtoReflect.Descriptor instead.
func (*DisConnectReply) Descriptor() ([]byte, []int) {
	return file_logic_v1_logic_proto_rawDescGZIP(), []int{10}
}

func (x *DisConnectReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GroupSendMentionRequest_GroupAtInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 标志为1时表示@全体，为0时为@指定用户
	GroupAtFlag uint32 `protobuf:"varint,1,opt,name=group_at_flag,json=groupAtFlag,proto3" json:"group_at_flag,omitempty"`
	GroupAtUid  string `protobuf:"bytes,2,opt,name=group_at_uid,json=groupAtUid,proto3" json:"group_at_uid,omitempty"`
}

func (x *GroupSendMentionRequest_GroupAtInfo) Reset() {
	*x = GroupSendMentionRequest_GroupAtInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_logic_v1_logic_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupSendMentionRequest_GroupAtInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupSendMentionRequest_GroupAtInfo) ProtoMessage() {}

func (x *GroupSendMentionRequest_GroupAtInfo) ProtoReflect() protoreflect.Message {
	mi := &file_logic_v1_logic_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupSendMentionRequest_GroupAtInfo.ProtoReflect.Descriptor instead.
func (*GroupSendMentionRequest_GroupAtInfo) Descriptor() ([]byte, []int) {
	return file_logic_v1_logic_proto_rawDescGZIP(), []int{5, 0}
}

func (x *GroupSendMentionRequest_GroupAtInfo) GetGroupAtFlag() uint32 {
	if x != nil {
		return x.GroupAtFlag
	}
	return 0
}

func (x *GroupSendMentionRequest_GroupAtInfo) GetGroupAtUid() string {
	if x != nil {
		return x.GroupAtUid
	}
	return ""
}

var File_logic_v1_logic_proto protoreflect.FileDescriptor

var file_logic_v1_logic_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x10, 0x6a, 0x6f, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x6a, 0x6f, 0x62, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa3, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x53, 0x65, 0x71, 0x22, 0x71, 0x0a, 0x0c, 0x52, 0x65,
	0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x67, 0x0a,
	0x11, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6a,
	0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x07, 0x6d,
	0x73, 0x67, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x52, 0x0a, 0x13, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x4b, 0x65, 0x79, 0x22, 0x6f, 0x0a, 0x10, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x6d,
	0x73, 0x67, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6a, 0x6f, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x42, 0x6f,
	0x64, 0x79, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x42, 0x6f, 0x64, 0x79, 0x22, 0xa1, 0x02, 0x0a, 0x17,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6a, 0x6f, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x42,
	0x6f, 0x64, 0x79, 0x12, 0x55, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x53, 0x0a, 0x0b, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0d, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x61, 0x74, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x20, 0x0a,
	0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x74, 0x55, 0x69, 0x64, 0x22,
	0x48, 0x0a, 0x12, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x5f, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x53, 0x65, 0x71, 0x22, 0x66, 0x0a, 0x0a, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x28, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x53, 0x0a, 0x0d, 0x44,
	0x69, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x22, 0x2b, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2a, 0x48, 0x0a,
	0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x66, 0x61, 0x63, 0x65, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05,
	0x73, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x05, 0x32, 0xdd, 0x06, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69,
	0x63, 0x12, 0x60, 0x0a, 0x0a, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x12,
	0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x11, 0x22, 0x0c, 0x2f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x2f, 0x73, 0x65, 0x6e, 0x64,
	0x3a, 0x01, 0x2a, 0x12, 0x68, 0x0a, 0x0c, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x63,
	0x61, 0x6c, 0x6c, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c,
	0x61, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x73, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x2f, 0x72, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x3a, 0x01, 0x2a, 0x12, 0x5d, 0x0a,
	0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x61, 0x79, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x22, 0x0b, 0x2f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0x73, 0x0a, 0x10,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x61,
	0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x01,
	0x2a, 0x12, 0x65, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c,
	0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x22, 0x18,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2f, 0x72,
	0x65, 0x63, 0x61, 0x6c, 0x6c, 0x3a, 0x01, 0x2a, 0x12, 0x5b, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d,
	0x53, 0x65, 0x6e, 0x64, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x22, 0x15,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x22, 0x0a, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x2f, 0x73, 0x65,
	0x6e, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0x65, 0x0a, 0x0d, 0x52, 0x6f, 0x6f, 0x6d, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79,
	0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x72, 0x6f, 0x6f, 0x6d, 0x2f,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x3f, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x48, 0x0a,
	0x0a, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x29, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x17, 0x61, 0x72, 0x6f, 0x64, 0x2d,
	0x69, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2f, 0x76, 0x31, 0x3b,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_logic_v1_logic_proto_rawDescOnce sync.Once
	file_logic_v1_logic_proto_rawDescData = file_logic_v1_logic_proto_rawDesc
)

func file_logic_v1_logic_proto_rawDescGZIP() []byte {
	file_logic_v1_logic_proto_rawDescOnce.Do(func() {
		file_logic_v1_logic_proto_rawDescData = protoimpl.X.CompressGZIP(file_logic_v1_logic_proto_rawDescData)
	})
	return file_logic_v1_logic_proto_rawDescData
}

var file_logic_v1_logic_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_logic_v1_logic_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_logic_v1_logic_proto_goTypes = []interface{}{
	(MsgType)(0),                                // 0: api.logic.v1.MsgType
	(*SendReplay)(nil),                          // 1: api.logic.v1.SendReplay
	(*RecallReplay)(nil),                        // 2: api.logic.v1.RecallReplay
	(*SingleSendRequest)(nil),                   // 3: api.logic.v1.SingleSendRequest
	(*SingleRecallRequest)(nil),                 // 4: api.logic.v1.SingleRecallRequest
	(*GroupSendRequest)(nil),                    // 5: api.logic.v1.GroupSendRequest
	(*GroupSendMentionRequest)(nil),             // 6: api.logic.v1.GroupSendMentionRequest
	(*GroupRecallRequest)(nil),                  // 7: api.logic.v1.GroupRecallRequest
	(*ConnectReq)(nil),                          // 8: api.logic.v1.ConnectReq
	(*ConnectReply)(nil),                        // 9: api.logic.v1.ConnectReply
	(*DisConnectReq)(nil),                       // 10: api.logic.v1.DisConnectReq
	(*DisConnectReply)(nil),                     // 11: api.logic.v1.DisConnectReply
	(*GroupSendMentionRequest_GroupAtInfo)(nil), // 12: api.logic.v1.GroupSendMentionRequest.GroupAtInfo
	(*v1.MsgBody)(nil),                          // 13: api.job.v1.MsgBody
}
var file_logic_v1_logic_proto_depIdxs = []int32{
	13, // 0: api.logic.v1.SingleSendRequest.msg_body:type_name -> api.job.v1.MsgBody
	13, // 1: api.logic.v1.GroupSendRequest.msg_body:type_name -> api.job.v1.MsgBody
	13, // 2: api.logic.v1.GroupSendMentionRequest.msg_body:type_name -> api.job.v1.MsgBody
	12, // 3: api.logic.v1.GroupSendMentionRequest.group_at_info:type_name -> api.logic.v1.GroupSendMentionRequest.GroupAtInfo
	3,  // 4: api.logic.v1.Logic.SingleSend:input_type -> api.logic.v1.SingleSendRequest
	4,  // 5: api.logic.v1.Logic.SingleRecall:input_type -> api.logic.v1.SingleRecallRequest
	5,  // 6: api.logic.v1.Logic.GroupSend:input_type -> api.logic.v1.GroupSendRequest
	6,  // 7: api.logic.v1.Logic.GroupSendMention:input_type -> api.logic.v1.GroupSendMentionRequest
	7,  // 8: api.logic.v1.Logic.GroupRecall:input_type -> api.logic.v1.GroupRecallRequest
	5,  // 9: api.logic.v1.Logic.RoomSend:input_type -> api.logic.v1.GroupSendRequest
	5,  // 10: api.logic.v1.Logic.RoomBroadcast:input_type -> api.logic.v1.GroupSendRequest
	8,  // 11: api.logic.v1.Logic.Connect:input_type -> api.logic.v1.ConnectReq
	10, // 12: api.logic.v1.Logic.Disconnect:input_type -> api.logic.v1.DisConnectReq
	1,  // 13: api.logic.v1.Logic.SingleSend:output_type -> api.logic.v1.SendReplay
	2,  // 14: api.logic.v1.Logic.SingleRecall:output_type -> api.logic.v1.RecallReplay
	1,  // 15: api.logic.v1.Logic.GroupSend:output_type -> api.logic.v1.SendReplay
	1,  // 16: api.logic.v1.Logic.GroupSendMention:output_type -> api.logic.v1.SendReplay
	2,  // 17: api.logic.v1.Logic.GroupRecall:output_type -> api.logic.v1.RecallReplay
	1,  // 18: api.logic.v1.Logic.RoomSend:output_type -> api.logic.v1.SendReplay
	1,  // 19: api.logic.v1.Logic.RoomBroadcast:output_type -> api.logic.v1.SendReplay
	9,  // 20: api.logic.v1.Logic.Connect:output_type -> api.logic.v1.ConnectReply
	11, // 21: api.logic.v1.Logic.Disconnect:output_type -> api.logic.v1.DisConnectReply
	13, // [13:22] is the sub-list for method output_type
	4,  // [4:13] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_logic_v1_logic_proto_init() }
func file_logic_v1_logic_proto_init() {
	if File_logic_v1_logic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_logic_v1_logic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendReplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_v1_logic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecallReplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_v1_logic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleSendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_v1_logic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleRecallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_v1_logic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_v1_logic_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSendMentionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_v1_logic_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupRecallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_v1_logic_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_v1_logic_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_v1_logic_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisConnectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_v1_logic_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisConnectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_logic_v1_logic_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupSendMentionRequest_GroupAtInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_logic_v1_logic_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_logic_v1_logic_proto_goTypes,
		DependencyIndexes: file_logic_v1_logic_proto_depIdxs,
		EnumInfos:         file_logic_v1_logic_proto_enumTypes,
		MessageInfos:      file_logic_v1_logic_proto_msgTypes,
	}.Build()
	File_logic_v1_logic_proto = out.File
	file_logic_v1_logic_proto_rawDesc = nil
	file_logic_v1_logic_proto_goTypes = nil
	file_logic_v1_logic_proto_depIdxs = nil
}
