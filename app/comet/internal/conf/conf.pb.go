// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: internal/conf/conf.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Env struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region    string   `protobuf:"bytes,1,opt,name=Region,proto3" json:"Region,omitempty"`
	Zone      string   `protobuf:"bytes,2,opt,name=Zone,proto3" json:"Zone,omitempty"`
	DeployEnv string   `protobuf:"bytes,3,opt,name=DeployEnv,proto3" json:"DeployEnv,omitempty"`
	Host      string   `protobuf:"bytes,4,opt,name=Host,proto3" json:"Host,omitempty"`
	Weight    int64    `protobuf:"varint,5,opt,name=Weight,proto3" json:"Weight,omitempty"`
	Offline   bool     `protobuf:"varint,6,opt,name=Offline,proto3" json:"Offline,omitempty"`
	Addrs     []string `protobuf:"bytes,7,rep,name=Addrs,proto3" json:"Addrs,omitempty"`
}

func (x *Env) Reset() {
	*x = Env{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Env) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Env) ProtoMessage() {}

func (x *Env) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Env.ProtoReflect.Descriptor instead.
func (*Env) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{0}
}

func (x *Env) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Env) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *Env) GetDeployEnv() string {
	if x != nil {
		return x.DeployEnv
	}
	return ""
}

func (x *Env) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Env) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Env) GetOffline() bool {
	if x != nil {
		return x.Offline
	}
	return false
}

func (x *Env) GetAddrs() []string {
	if x != nil {
		return x.Addrs
	}
	return nil
}

type Consul struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Scheme  string `protobuf:"bytes,2,opt,name=scheme,proto3" json:"scheme,omitempty"`
}

func (x *Consul) Reset() {
	*x = Consul{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Consul) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Consul) ProtoMessage() {}

func (x *Consul) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Consul.ProtoReflect.Descriptor instead.
func (*Consul) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{1}
}

func (x *Consul) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Consul) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

type TCP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bind         []string `protobuf:"bytes,1,rep,name=Bind,proto3" json:"Bind,omitempty"`
	Sndbuf       int32    `protobuf:"varint,2,opt,name=Sndbuf,proto3" json:"Sndbuf,omitempty"`
	Rcvbuf       int32    `protobuf:"varint,3,opt,name=Rcvbuf,proto3" json:"Rcvbuf,omitempty"`
	KeepAlive    bool     `protobuf:"varint,4,opt,name=KeepAlive,proto3" json:"KeepAlive,omitempty"`
	Reader       int32    `protobuf:"varint,5,opt,name=Reader,proto3" json:"Reader,omitempty"`
	ReadBuf      int32    `protobuf:"varint,6,opt,name=ReadBuf,proto3" json:"ReadBuf,omitempty"`
	ReadBufSize  int32    `protobuf:"varint,7,opt,name=ReadBufSize,proto3" json:"ReadBufSize,omitempty"`
	Writer       int32    `protobuf:"varint,8,opt,name=Writer,proto3" json:"Writer,omitempty"`
	WriteBuf     int32    `protobuf:"varint,9,opt,name=WriteBuf,proto3" json:"WriteBuf,omitempty"`
	WriteBufSize int32    `protobuf:"varint,10,opt,name=WriteBufSize,proto3" json:"WriteBufSize,omitempty"`
}

func (x *TCP) Reset() {
	*x = TCP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCP) ProtoMessage() {}

func (x *TCP) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCP.ProtoReflect.Descriptor instead.
func (*TCP) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{2}
}

func (x *TCP) GetBind() []string {
	if x != nil {
		return x.Bind
	}
	return nil
}

func (x *TCP) GetSndbuf() int32 {
	if x != nil {
		return x.Sndbuf
	}
	return 0
}

func (x *TCP) GetRcvbuf() int32 {
	if x != nil {
		return x.Rcvbuf
	}
	return 0
}

func (x *TCP) GetKeepAlive() bool {
	if x != nil {
		return x.KeepAlive
	}
	return false
}

func (x *TCP) GetReader() int32 {
	if x != nil {
		return x.Reader
	}
	return 0
}

func (x *TCP) GetReadBuf() int32 {
	if x != nil {
		return x.ReadBuf
	}
	return 0
}

func (x *TCP) GetReadBufSize() int32 {
	if x != nil {
		return x.ReadBufSize
	}
	return 0
}

func (x *TCP) GetWriter() int32 {
	if x != nil {
		return x.Writer
	}
	return 0
}

func (x *TCP) GetWriteBuf() int32 {
	if x != nil {
		return x.WriteBuf
	}
	return 0
}

func (x *TCP) GetWriteBufSize() int32 {
	if x != nil {
		return x.WriteBufSize
	}
	return 0
}

type Websocket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bind        []string `protobuf:"bytes,1,rep,name=Bind,proto3" json:"Bind,omitempty"`
	TLSOpen     bool     `protobuf:"varint,2,opt,name=TLSOpen,proto3" json:"TLSOpen,omitempty"`
	TLSBind     []string `protobuf:"bytes,3,rep,name=TLSBind,proto3" json:"TLSBind,omitempty"`
	CertFile    string   `protobuf:"bytes,4,opt,name=CertFile,proto3" json:"CertFile,omitempty"`
	PrivateFile string   `protobuf:"bytes,5,opt,name=PrivateFile,proto3" json:"PrivateFile,omitempty"`
}

func (x *Websocket) Reset() {
	*x = Websocket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Websocket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Websocket) ProtoMessage() {}

func (x *Websocket) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Websocket.ProtoReflect.Descriptor instead.
func (*Websocket) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{3}
}

func (x *Websocket) GetBind() []string {
	if x != nil {
		return x.Bind
	}
	return nil
}

func (x *Websocket) GetTLSOpen() bool {
	if x != nil {
		return x.TLSOpen
	}
	return false
}

func (x *Websocket) GetTLSBind() []string {
	if x != nil {
		return x.TLSBind
	}
	return nil
}

func (x *Websocket) GetCertFile() string {
	if x != nil {
		return x.CertFile
	}
	return ""
}

func (x *Websocket) GetPrivateFile() string {
	if x != nil {
		return x.PrivateFile
	}
	return ""
}

type Protocol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timer            int32                `protobuf:"varint,1,opt,name=Timer,proto3" json:"Timer,omitempty"`
	TimerSize        int32                `protobuf:"varint,2,opt,name=TimerSize,proto3" json:"TimerSize,omitempty"`
	SvrProto         int32                `protobuf:"varint,3,opt,name=SvrProto,proto3" json:"SvrProto,omitempty"`
	CliProto         int32                `protobuf:"varint,4,opt,name=CliProto,proto3" json:"CliProto,omitempty"`
	HandshakeTimeout *durationpb.Duration `protobuf:"bytes,5,opt,name=HandshakeTimeout,proto3" json:"HandshakeTimeout,omitempty"`
}

func (x *Protocol) Reset() {
	*x = Protocol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Protocol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Protocol) ProtoMessage() {}

func (x *Protocol) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Protocol.ProtoReflect.Descriptor instead.
func (*Protocol) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{4}
}

func (x *Protocol) GetTimer() int32 {
	if x != nil {
		return x.Timer
	}
	return 0
}

func (x *Protocol) GetTimerSize() int32 {
	if x != nil {
		return x.TimerSize
	}
	return 0
}

func (x *Protocol) GetSvrProto() int32 {
	if x != nil {
		return x.SvrProto
	}
	return 0
}

func (x *Protocol) GetCliProto() int32 {
	if x != nil {
		return x.CliProto
	}
	return 0
}

func (x *Protocol) GetHandshakeTimeout() *durationpb.Duration {
	if x != nil {
		return x.HandshakeTimeout
	}
	return nil
}

type Bucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size          int32  `protobuf:"varint,1,opt,name=Size,proto3" json:"Size,omitempty"`
	Channel       int32  `protobuf:"varint,2,opt,name=Channel,proto3" json:"Channel,omitempty"`
	Room          int32  `protobuf:"varint,3,opt,name=Room,proto3" json:"Room,omitempty"`
	RoutineAmount uint64 `protobuf:"varint,4,opt,name=RoutineAmount,proto3" json:"RoutineAmount,omitempty"`
	RountineSize  int32  `protobuf:"varint,5,opt,name=RountineSize,proto3" json:"RountineSize,omitempty"`
}

func (x *Bucket) Reset() {
	*x = Bucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bucket) ProtoMessage() {}

func (x *Bucket) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bucket.ProtoReflect.Descriptor instead.
func (*Bucket) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{5}
}

func (x *Bucket) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Bucket) GetChannel() int32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

func (x *Bucket) GetRoom() int32 {
	if x != nil {
		return x.Room
	}
	return 0
}

func (x *Bucket) GetRoutineAmount() uint64 {
	if x != nil {
		return x.RoutineAmount
	}
	return 0
}

func (x *Bucket) GetRountineSize() int32 {
	if x != nil {
		return x.RountineSize
	}
	return 0
}

type RPCClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dial    *durationpb.Duration `protobuf:"bytes,1,opt,name=Dial,proto3" json:"Dial,omitempty"`
	Timeout *durationpb.Duration `protobuf:"bytes,2,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
}

func (x *RPCClient) Reset() {
	*x = RPCClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCClient) ProtoMessage() {}

func (x *RPCClient) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCClient.ProtoReflect.Descriptor instead.
func (*RPCClient) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{6}
}

func (x *RPCClient) GetDial() *durationpb.Duration {
	if x != nil {
		return x.Dial
	}
	return nil
}

func (x *RPCClient) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type RPCServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Network           string               `protobuf:"bytes,1,opt,name=Network,proto3" json:"Network,omitempty"`
	Addr              string               `protobuf:"bytes,2,opt,name=Addr,proto3" json:"Addr,omitempty"`
	Timeout           *durationpb.Duration `protobuf:"bytes,3,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
	IdleTimeout       *durationpb.Duration `protobuf:"bytes,4,opt,name=IdleTimeout,proto3" json:"IdleTimeout,omitempty"`
	MaxLifeTime       *durationpb.Duration `protobuf:"bytes,5,opt,name=MaxLifeTime,proto3" json:"MaxLifeTime,omitempty"`
	ForceCloseWait    *durationpb.Duration `protobuf:"bytes,6,opt,name=ForceCloseWait,proto3" json:"ForceCloseWait,omitempty"`
	KeepAliveInterval *durationpb.Duration `protobuf:"bytes,7,opt,name=KeepAliveInterval,proto3" json:"KeepAliveInterval,omitempty"`
	KeepAliveTimeout  *durationpb.Duration `protobuf:"bytes,8,opt,name=KeepAliveTimeout,proto3" json:"KeepAliveTimeout,omitempty"`
}

func (x *RPCServer) Reset() {
	*x = RPCServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_conf_conf_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCServer) ProtoMessage() {}

func (x *RPCServer) ProtoReflect() protoreflect.Message {
	mi := &file_internal_conf_conf_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCServer.ProtoReflect.Descriptor instead.
func (*RPCServer) Descriptor() ([]byte, []int) {
	return file_internal_conf_conf_proto_rawDescGZIP(), []int{7}
}

func (x *RPCServer) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *RPCServer) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *RPCServer) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *RPCServer) GetIdleTimeout() *durationpb.Duration {
	if x != nil {
		return x.IdleTimeout
	}
	return nil
}

func (x *RPCServer) GetMaxLifeTime() *durationpb.Duration {
	if x != nil {
		return x.MaxLifeTime
	}
	return nil
}

func (x *RPCServer) GetForceCloseWait() *durationpb.Duration {
	if x != nil {
		return x.ForceCloseWait
	}
	return nil
}

func (x *RPCServer) GetKeepAliveInterval() *durationpb.Duration {
	if x != nil {
		return x.KeepAliveInterval
	}
	return nil
}

func (x *RPCServer) GetKeepAliveTimeout() *durationpb.Duration {
	if x != nil {
		return x.KeepAliveTimeout
	}
	return nil
}

var File_internal_conf_conf_proto protoreflect.FileDescriptor

var file_internal_conf_conf_proto_rawDesc = []byte{
	0x0a, 0x18, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6b, 0x72, 0x61, 0x74,
	0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xab, 0x01, 0x0a, 0x03, 0x45, 0x6e, 0x76, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x5a, 0x6f, 0x6e, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x45, 0x6e, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x45, 0x6e, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x41, 0x64, 0x64, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x41,
	0x64, 0x64, 0x72, 0x73, 0x22, 0x3a, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65,
	0x22, 0x93, 0x02, 0x0a, 0x03, 0x54, 0x43, 0x50, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x69, 0x6e, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x6e, 0x64, 0x62, 0x75, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x53, 0x6e,
	0x64, 0x62, 0x75, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x63, 0x76, 0x62, 0x75, 0x66, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52, 0x63, 0x76, 0x62, 0x75, 0x66, 0x12, 0x1c, 0x0a, 0x09,
	0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x52, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x61, 0x64, 0x42, 0x75, 0x66, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x52, 0x65, 0x61, 0x64, 0x42, 0x75, 0x66, 0x12, 0x20, 0x0a, 0x0b,
	0x52, 0x65, 0x61, 0x64, 0x42, 0x75, 0x66, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x42, 0x75, 0x66, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x57, 0x72, 0x69, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x72, 0x69, 0x74, 0x65, 0x42,
	0x75, 0x66, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x57, 0x72, 0x69, 0x74, 0x65, 0x42,
	0x75, 0x66, 0x12, 0x22, 0x0a, 0x0c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x42, 0x75, 0x66, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x42,
	0x75, 0x66, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x09, 0x57, 0x65, 0x62, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x4c, 0x53, 0x4f,
	0x70, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x54, 0x4c, 0x53, 0x4f, 0x70,
	0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x4c, 0x53, 0x42, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x54, 0x4c, 0x53, 0x42, 0x69, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x43, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x43, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53,
	0x76, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x53,
	0x76, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x45, 0x0a, 0x10, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x68,
	0x61, 0x6b, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x94, 0x01, 0x0a, 0x06, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x52, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x52, 0x6f, 0x75, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0x6f, 0x0a, 0x09, 0x52, 0x50, 0x43, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2d,
	0x0a, 0x04, 0x44, 0x69, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x44, 0x69, 0x61, 0x6c, 0x12, 0x33, 0x0a,
	0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x22, 0xbb, 0x03, 0x0a, 0x09, 0x52, 0x50, 0x43, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x64,
	0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x64, 0x64, 0x72, 0x12, 0x33,
	0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x49, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x49, 0x64, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x12, 0x3b, 0x0a, 0x0b, 0x4d, 0x61, 0x78, 0x4c, 0x69, 0x66, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x4d, 0x61, 0x78, 0x4c, 0x69, 0x66, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x41, 0x0a,
	0x0e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x57, 0x61, 0x69, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0e, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x57, 0x61, 0x69, 0x74,
	0x12, 0x47, 0x0a, 0x11, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x45, 0x0a, 0x10, 0x4b, 0x65, 0x65,
	0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10,
	0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x42, 0x1e, 0x5a, 0x1c, 0x61, 0x70, 0x70, 0x2f, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x3b, 0x63, 0x6f, 0x6e, 0x66,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_conf_conf_proto_rawDescOnce sync.Once
	file_internal_conf_conf_proto_rawDescData = file_internal_conf_conf_proto_rawDesc
)

func file_internal_conf_conf_proto_rawDescGZIP() []byte {
	file_internal_conf_conf_proto_rawDescOnce.Do(func() {
		file_internal_conf_conf_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_conf_conf_proto_rawDescData)
	})
	return file_internal_conf_conf_proto_rawDescData
}

var file_internal_conf_conf_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_internal_conf_conf_proto_goTypes = []interface{}{
	(*Env)(nil),                 // 0: kratos.api.Env
	(*Consul)(nil),              // 1: kratos.api.Consul
	(*TCP)(nil),                 // 2: kratos.api.TCP
	(*Websocket)(nil),           // 3: kratos.api.Websocket
	(*Protocol)(nil),            // 4: kratos.api.Protocol
	(*Bucket)(nil),              // 5: kratos.api.Bucket
	(*RPCClient)(nil),           // 6: kratos.api.RPCClient
	(*RPCServer)(nil),           // 7: kratos.api.RPCServer
	(*durationpb.Duration)(nil), // 8: google.protobuf.Duration
}
var file_internal_conf_conf_proto_depIdxs = []int32{
	8, // 0: kratos.api.Protocol.HandshakeTimeout:type_name -> google.protobuf.Duration
	8, // 1: kratos.api.RPCClient.Dial:type_name -> google.protobuf.Duration
	8, // 2: kratos.api.RPCClient.Timeout:type_name -> google.protobuf.Duration
	8, // 3: kratos.api.RPCServer.Timeout:type_name -> google.protobuf.Duration
	8, // 4: kratos.api.RPCServer.IdleTimeout:type_name -> google.protobuf.Duration
	8, // 5: kratos.api.RPCServer.MaxLifeTime:type_name -> google.protobuf.Duration
	8, // 6: kratos.api.RPCServer.ForceCloseWait:type_name -> google.protobuf.Duration
	8, // 7: kratos.api.RPCServer.KeepAliveInterval:type_name -> google.protobuf.Duration
	8, // 8: kratos.api.RPCServer.KeepAliveTimeout:type_name -> google.protobuf.Duration
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_internal_conf_conf_proto_init() }
func file_internal_conf_conf_proto_init() {
	if File_internal_conf_conf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_conf_conf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Env); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Consul); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Websocket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Protocol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_conf_conf_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_conf_conf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_conf_conf_proto_goTypes,
		DependencyIndexes: file_internal_conf_conf_proto_depIdxs,
		MessageInfos:      file_internal_conf_conf_proto_msgTypes,
	}.Build()
	File_internal_conf_conf_proto = out.File
	file_internal_conf_conf_proto_rawDesc = nil
	file_internal_conf_conf_proto_goTypes = nil
	file_internal_conf_conf_proto_depIdxs = nil
}
